


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000 00000000 
                       num     equ              0
   21 00000000         
   22 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   23 00000000         ; Output a 24-bit number in unsigned decimal format
   24 00000000         ; Input: R0 (call by value) 24-bit unsigned number
   25 00000000         ; Output: none
   26 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   27 00000000         ; Iterative implimentation
   28 00000000         LCD_OutDec
   29 00000000 46F4            mov              r12, lr     ; save link registe
                                                            r
   30 00000002 B082            sub              sp, #8      ; allocate local va
                                                            riable
   31 00000004 F04F 0100       mov              r1, #0      ; set null as the e
                                                            nd char
   32 00000008 9100            str              r1, [sp, #num] ; store end char
                                                             to the stack
   33 0000000A         start
   34 0000000A B082            sub              sp, #8      ; allocate local va
                                                            riable
   35 0000000C 9000            str              r0, [sp, #num] ; store local va
                                                            riable (param)
   36 0000000E 280A            cmp              r0, #10     ; base case (num < 
                                                            10)
   37 00000010 D205            bhs              skip_base
   38 00000012 F100 0030       add              r0, #0x30   ; convert to ASCII
   39 00000016 F7FF FFFE       bl               ST7735_OutChar ; print digit
   40 0000001A B002            add              sp, #8      ; deallocate num
   41 0000001C E004            b                nxt_digit   ; print rest of the
                                                             digits
   42 0000001E         skip_base
   43 0000001E F04F 020A       mov              r2, #10



ARM Macro Assembler    Page 2 


   44 00000022 FBB0 F0F2       udiv             r0, r0, r2  ; shift num right o
                                                            ne decimal place
   45 00000026 E7F0            b                start
   46 00000028         nxt_digit
   47 00000028 9800            ldr              r0, [sp, #num]
   48 0000002A 2800            cmp              r0, #0
   49 0000002C D00D            beq              done
   50 0000002E F04F 020A       mov              r2, #10
   51 00000032 FBB0 F1F2       udiv             r1, r0, r2  ; start mod 10
   52 00000036 FB01 F102       mul              r1, r1, r2
   53 0000003A EBA0 0001       sub              r0, r1      ; end mod 10
   54 0000003E F100 0030       add              r0, #0x30   ; convert to ASCII
   55 00000042 F7FF FFFE       bl               ST7735_OutChar ; output char
   56 00000046 B002            add              sp, #8      ; deallocate local 
                                                            variable
   57 00000048 E7EE            b                nxt_digit   ; 'return'
   58 0000004A         done
   59 0000004A B002            add              sp, #8      ; deallocate end ch
                                                            ar (= '\0')
   60 0000004C 46E6            mov              lr, r12     ; restore link regi
                                                            ster
   61 0000004E 4770            bx               lr
   62 00000050         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   63 00000050         
   64 00000050 00000000 
                       link    equ              0           ; BINDING
   65 00000050 00000008 
                       n       equ              8
   66 00000050 00000010 
                       cnt     equ              16
   67 00000050 00000018 
                       dig     equ              24
   68 00000050         
   69 00000050         ; -----------------------LCD _OutFix--------------------
                       --
   70 00000050         ; Output characters to LCD display in fixed-point format
                       
   71 00000050         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   72 00000050         ; Inputs:  R0 is an unsigned 24-bit number
   73 00000050         ; Outputs: none
   74 00000050         ; E.g., R0=0,    then output "0.000 "
   75 00000050         ;       R0=3,    then output "0.003 "
   76 00000050         ;       R0=89,   then output "0.089 "
   77 00000050         ;       R0=123,  then output "0.123 "
   78 00000050         ;       R0=9999, then output "9.999 "
   79 00000050         ;       R0>9999, then output "*.*** "
   80 00000050         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   81 00000050         ; Recursive implimentation
   82 00000050         LCD_OutFix
   83 00000050 F04F 0103       mov              r1, #3
   84 00000054         start_Fix
   85 00000054 B088            sub              sp, #32     ; ALLOCATION
   86 00000056 F8CD E000       str              lr, [sp, #link]
   87 0000005A 9002            str              r0, [sp, #n]
   88 0000005C 9104            str              r1, [sp, #cnt]
   89 0000005E F04F 020A       mov              r2, #10     ; mod 10 start
   90 00000062 FBB0 F1F2       udiv             r1, r0, r2



ARM Macro Assembler    Page 3 


   91 00000066 FB01 F102       mul              r1, r1, r2
   92 0000006A EBA0 0001       sub              r0, r1      ; mod 10 end
   93 0000006E F100 0030       add              r0, #0x30   ; convert to ASCII
   94 00000072 9006            str              r0, [sp, #dig]
   95 00000074 9804            ldr              r0, [sp, #cnt] ; ACCESS (any lo
                                                            ad of a local varia
                                                            ble)
   96 00000076 2800            cmp              r0, #0
   97 00000078 D015            beq              base_case   ; cnt == 0
   98 0000007A 9802            ldr              r0, [sp, #n] ; load current num
                                                            ber
   99 0000007C F04F 020A       mov              r2, #10
  100 00000080 FBB0 F0F2       udiv             r0, r0, r2  ; devide number by 
                                                            10 (shift right one
                                                             decimal place)
  101 00000084 9904            ldr              r1, [sp, #cnt] 
                                                            ; decrement counter
                                                            
  102 00000086 F1A1 0101       sub              r1, #1
  103 0000008A F7FF FFE3       bl               start_Fix   ; LCD_OutFix(n // 1
                                                            0, cnt - 1)
  104 0000008E 9806            ldr              r0, [sp, #dig] ; load digit onc
                                                            e others before pri
                                                            nt
  105 00000090 F1BC 0F01       cmp              r12, #1     ; check 'not too bi
                                                            g' boolean
  106 00000094 D001            beq              no_star_1
  107 00000096 F04F 002A       mov              r0, #0x2A   ; if too big, print
                                                             only stars
  108 0000009A         no_star_1
  109 0000009A F7FF FFFE       bl               ST7735_OutChar
  110 0000009E F8DD E000       ldr              lr, [sp, #link]
  111 000000A2 B008            add              sp, #32     ; DEALLOCATION (onc
                                                            e before every retu
                                                            rn)
  112 000000A4 4770            bx               lr
  113 000000A6         base_case                            ; cnt == 0
  114 000000A6 F04F 0C01       mov              r12, #1     ; 'not too big' boo
                                                            lean
  115 000000AA 9802            ldr              r0, [sp, #n]
  116 000000AC 280A            cmp              r0, #10
  117 000000AE D301            blo              not_too_big
  118 000000B0 F04F 0C00       mov              r12, #0
  119 000000B4         not_too_big                          ; n is < 10 after c
                                                            ount hits 0
  120 000000B4 9806            ldr              r0, [sp, #dig]
  121 000000B6 F1BC 0F01       cmp              r12, #1     ; check if not too 
                                                            big
  122 000000BA D001            beq              no_star     ; if too big, set r
                                                            0 to asterisk, else
                                                            , br no star
  123 000000BC F04F 002A       mov              r0, #0x2A
  124 000000C0         no_star
  125 000000C0 F7FF FFFE       bl               ST7735_OutChar 
                                                            ; print first char
  126 000000C4 F04F 002E       mov              r0, #0x2E
  127 000000C8 F7FF FFFE       bl               ST7735_OutChar ; print decimal
  128 000000CC F8DD E000       ldr              lr, [sp, #link]
  129 000000D0 B008            add              sp, #32     ; DEALLOCATION



ARM Macro Assembler    Page 4 


  130 000000D2 4770            bx               lr
  131 000000D4         
  132 000000D4                 ALIGN
  133 000000D4         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  134 000000D4         
  135 000000D4                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  136 000000D4                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\TI\TM4C123 --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 28 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000050

Symbol: LCD_OutFix
   Definitions
      At line 82 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
base_case 000000A6

Symbol: base_case
   Definitions
      At line 113 in file Print.s
   Uses
      At line 97 in file Print.s
Comment: base_case used once
done 0000004A

Symbol: done
   Definitions
      At line 58 in file Print.s
   Uses
      At line 49 in file Print.s
Comment: done used once
no_star 000000C0

Symbol: no_star
   Definitions
      At line 124 in file Print.s
   Uses
      At line 122 in file Print.s
Comment: no_star used once
no_star_1 0000009A

Symbol: no_star_1
   Definitions
      At line 108 in file Print.s
   Uses
      At line 106 in file Print.s
Comment: no_star_1 used once
not_too_big 000000B4

Symbol: not_too_big



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 119 in file Print.s
   Uses
      At line 117 in file Print.s
Comment: not_too_big used once
nxt_digit 00000028

Symbol: nxt_digit
   Definitions
      At line 46 in file Print.s
   Uses
      At line 41 in file Print.s
      At line 57 in file Print.s

skip_base 0000001E

Symbol: skip_base
   Definitions
      At line 42 in file Print.s
   Uses
      At line 37 in file Print.s
Comment: skip_base used once
start 0000000A

Symbol: start
   Definitions
      At line 33 in file Print.s
   Uses
      At line 45 in file Print.s
Comment: start used once
start_Fix 00000054

Symbol: start_Fix
   Definitions
      At line 84 in file Print.s
   Uses
      At line 103 in file Print.s
Comment: start_Fix used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

cnt 00000010

Symbol: cnt
   Definitions
      At line 66 in file Print.s
   Uses
      At line 88 in file Print.s
      At line 95 in file Print.s
      At line 101 in file Print.s

dig 00000018

Symbol: dig
   Definitions
      At line 67 in file Print.s
   Uses
      At line 94 in file Print.s
      At line 104 in file Print.s
      At line 120 in file Print.s

link 00000000

Symbol: link
   Definitions
      At line 64 in file Print.s
   Uses
      At line 86 in file Print.s
      At line 110 in file Print.s
      At line 128 in file Print.s

n 00000008

Symbol: n
   Definitions
      At line 65 in file Print.s
   Uses
      At line 87 in file Print.s
      At line 98 in file Print.s
      At line 115 in file Print.s

num 00000000

Symbol: num
   Definitions
      At line 20 in file Print.s
   Uses
      At line 32 in file Print.s
      At line 35 in file Print.s
      At line 47 in file Print.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 39 in file Print.s
      At line 55 in file Print.s
      At line 109 in file Print.s
      At line 125 in file Print.s
      At line 127 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
349 symbols in table
